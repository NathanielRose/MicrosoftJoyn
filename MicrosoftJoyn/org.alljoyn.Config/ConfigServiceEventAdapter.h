//-----------------------------------------------------------------------------
// <auto-generated> 
//   This code was generated by a tool. 
// 
//   Changes to this file may cause incorrect behavior and will be lost if  
//   the code is regenerated.
//
//   Tool: AllJoynCodeGenerator.exe
//
//   This tool is located in the Windows 10 SDK and the Windows 10 AllJoyn 
//   Visual Studio Extension in the Visual Studio Gallery.  
//
//   The generated code should be packaged in a Windows 10 C++/CX Runtime  
//   Component which can be consumed in any UWP-supported language using 
//   APIs that are available in Windows.Devices.AllJoyn.
//
//   Using AllJoynCodeGenerator - Invoke the following command with a valid 
//   Introspection XML file and a writable output directory:
//     AllJoynCodeGenerator -i <INPUT XML FILE> -o <OUTPUT DIRECTORY>
// </auto-generated>
//-----------------------------------------------------------------------------
#pragma once

namespace org { namespace alljoyn { namespace Config {

// This class, and the associated EventArgs classes, exist for the benefit of JavaScript developers who
// do not have the ability to implement IConfigService. Instead, ConfigServiceEventAdapter
// provides the Interface implementation and exposes a set of compatible events to the developer.
public ref class ConfigServiceEventAdapter sealed : [Windows::Foundation::Metadata::Default] IConfigService
{
public:
    // Method Invocation Events
    event Windows::Foundation::TypedEventHandler<ConfigServiceEventAdapter^, ConfigFactoryResetCalledEventArgs^>^ FactoryResetCalled 
    { 
        Windows::Foundation::EventRegistrationToken add(Windows::Foundation::TypedEventHandler<ConfigServiceEventAdapter^, ConfigFactoryResetCalledEventArgs^>^ handler) 
        { 
            return _FactoryResetCalled += ref new Windows::Foundation::EventHandler<Platform::Object^>
            ([handler](Platform::Object^ sender, Platform::Object^ args)
            {
                handler->Invoke(safe_cast<ConfigServiceEventAdapter^>(sender), safe_cast<ConfigFactoryResetCalledEventArgs^>(args));
            }, Platform::CallbackContext::Same);
        } 
        void remove(Windows::Foundation::EventRegistrationToken token) 
        { 
            _FactoryResetCalled -= token; 
        } 
    internal: 
        void raise(ConfigServiceEventAdapter^ sender, ConfigFactoryResetCalledEventArgs^ args) 
        { 
            _FactoryResetCalled(sender, args);
        } 
    }

    event Windows::Foundation::TypedEventHandler<ConfigServiceEventAdapter^, ConfigRestartCalledEventArgs^>^ RestartCalled 
    { 
        Windows::Foundation::EventRegistrationToken add(Windows::Foundation::TypedEventHandler<ConfigServiceEventAdapter^, ConfigRestartCalledEventArgs^>^ handler) 
        { 
            return _RestartCalled += ref new Windows::Foundation::EventHandler<Platform::Object^>
            ([handler](Platform::Object^ sender, Platform::Object^ args)
            {
                handler->Invoke(safe_cast<ConfigServiceEventAdapter^>(sender), safe_cast<ConfigRestartCalledEventArgs^>(args));
            }, Platform::CallbackContext::Same);
        } 
        void remove(Windows::Foundation::EventRegistrationToken token) 
        { 
            _RestartCalled -= token; 
        } 
    internal: 
        void raise(ConfigServiceEventAdapter^ sender, ConfigRestartCalledEventArgs^ args) 
        { 
            _RestartCalled(sender, args);
        } 
    }

    event Windows::Foundation::TypedEventHandler<ConfigServiceEventAdapter^, ConfigGetConfigurationsCalledEventArgs^>^ GetConfigurationsCalled 
    { 
        Windows::Foundation::EventRegistrationToken add(Windows::Foundation::TypedEventHandler<ConfigServiceEventAdapter^, ConfigGetConfigurationsCalledEventArgs^>^ handler) 
        { 
            return _GetConfigurationsCalled += ref new Windows::Foundation::EventHandler<Platform::Object^>
            ([handler](Platform::Object^ sender, Platform::Object^ args)
            {
                handler->Invoke(safe_cast<ConfigServiceEventAdapter^>(sender), safe_cast<ConfigGetConfigurationsCalledEventArgs^>(args));
            }, Platform::CallbackContext::Same);
        } 
        void remove(Windows::Foundation::EventRegistrationToken token) 
        { 
            _GetConfigurationsCalled -= token; 
        } 
    internal: 
        void raise(ConfigServiceEventAdapter^ sender, ConfigGetConfigurationsCalledEventArgs^ args) 
        { 
            _GetConfigurationsCalled(sender, args);
        } 
    }

    event Windows::Foundation::TypedEventHandler<ConfigServiceEventAdapter^, ConfigUpdateConfigurationsCalledEventArgs^>^ UpdateConfigurationsCalled 
    { 
        Windows::Foundation::EventRegistrationToken add(Windows::Foundation::TypedEventHandler<ConfigServiceEventAdapter^, ConfigUpdateConfigurationsCalledEventArgs^>^ handler) 
        { 
            return _UpdateConfigurationsCalled += ref new Windows::Foundation::EventHandler<Platform::Object^>
            ([handler](Platform::Object^ sender, Platform::Object^ args)
            {
                handler->Invoke(safe_cast<ConfigServiceEventAdapter^>(sender), safe_cast<ConfigUpdateConfigurationsCalledEventArgs^>(args));
            }, Platform::CallbackContext::Same);
        } 
        void remove(Windows::Foundation::EventRegistrationToken token) 
        { 
            _UpdateConfigurationsCalled -= token; 
        } 
    internal: 
        void raise(ConfigServiceEventAdapter^ sender, ConfigUpdateConfigurationsCalledEventArgs^ args) 
        { 
            _UpdateConfigurationsCalled(sender, args);
        } 
    }

    event Windows::Foundation::TypedEventHandler<ConfigServiceEventAdapter^, ConfigResetConfigurationsCalledEventArgs^>^ ResetConfigurationsCalled 
    { 
        Windows::Foundation::EventRegistrationToken add(Windows::Foundation::TypedEventHandler<ConfigServiceEventAdapter^, ConfigResetConfigurationsCalledEventArgs^>^ handler) 
        { 
            return _ResetConfigurationsCalled += ref new Windows::Foundation::EventHandler<Platform::Object^>
            ([handler](Platform::Object^ sender, Platform::Object^ args)
            {
                handler->Invoke(safe_cast<ConfigServiceEventAdapter^>(sender), safe_cast<ConfigResetConfigurationsCalledEventArgs^>(args));
            }, Platform::CallbackContext::Same);
        } 
        void remove(Windows::Foundation::EventRegistrationToken token) 
        { 
            _ResetConfigurationsCalled -= token; 
        } 
    internal: 
        void raise(ConfigServiceEventAdapter^ sender, ConfigResetConfigurationsCalledEventArgs^ args) 
        { 
            _ResetConfigurationsCalled(sender, args);
        } 
    }

    event Windows::Foundation::TypedEventHandler<ConfigServiceEventAdapter^, ConfigSetPasscodeCalledEventArgs^>^ SetPasscodeCalled 
    { 
        Windows::Foundation::EventRegistrationToken add(Windows::Foundation::TypedEventHandler<ConfigServiceEventAdapter^, ConfigSetPasscodeCalledEventArgs^>^ handler) 
        { 
            return _SetPasscodeCalled += ref new Windows::Foundation::EventHandler<Platform::Object^>
            ([handler](Platform::Object^ sender, Platform::Object^ args)
            {
                handler->Invoke(safe_cast<ConfigServiceEventAdapter^>(sender), safe_cast<ConfigSetPasscodeCalledEventArgs^>(args));
            }, Platform::CallbackContext::Same);
        } 
        void remove(Windows::Foundation::EventRegistrationToken token) 
        { 
            _SetPasscodeCalled -= token; 
        } 
    internal: 
        void raise(ConfigServiceEventAdapter^ sender, ConfigSetPasscodeCalledEventArgs^ args) 
        { 
            _SetPasscodeCalled(sender, args);
        } 
    }

    // Property Read Events
    event Windows::Foundation::TypedEventHandler<ConfigServiceEventAdapter^, ConfigGetVersionRequestedEventArgs^>^ GetVersionRequested 
    { 
        Windows::Foundation::EventRegistrationToken add(Windows::Foundation::TypedEventHandler<ConfigServiceEventAdapter^, ConfigGetVersionRequestedEventArgs^>^ handler) 
        { 
            return _GetVersionRequested += ref new Windows::Foundation::EventHandler<Platform::Object^>
            ([handler](Platform::Object^ sender, Platform::Object^ args)
            {
                handler->Invoke(safe_cast<ConfigServiceEventAdapter^>(sender), safe_cast<ConfigGetVersionRequestedEventArgs^>(args));
            }, Platform::CallbackContext::Same);
        } 
        void remove(Windows::Foundation::EventRegistrationToken token) 
        { 
            _GetVersionRequested -= token; 
        } 
    internal: 
        void raise(ConfigServiceEventAdapter^ sender, ConfigGetVersionRequestedEventArgs^ args) 
        { 
            _GetVersionRequested(sender, args);
        } 
    }

    // Property Write Events
    // IConfigService Implementation
    virtual Windows::Foundation::IAsyncOperation<ConfigFactoryResetResult^>^ FactoryResetAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info);
    virtual Windows::Foundation::IAsyncOperation<ConfigRestartResult^>^ RestartAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info);
    virtual Windows::Foundation::IAsyncOperation<ConfigGetConfigurationsResult^>^ GetConfigurationsAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info, _In_ Platform::String^ interfaceMemberInputArg);
    virtual Windows::Foundation::IAsyncOperation<ConfigUpdateConfigurationsResult^>^ UpdateConfigurationsAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info, _In_ Platform::String^ interfaceMemberInputArg, _In_ Windows::Foundation::Collections::IMapView<Platform::String^,Platform::Object^>^ interfaceMemberInputArg2);
    virtual Windows::Foundation::IAsyncOperation<ConfigResetConfigurationsResult^>^ ResetConfigurationsAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info, _In_ Platform::String^ interfaceMemberInputArg, _In_ Windows::Foundation::Collections::IVectorView<Platform::String^>^ interfaceMemberInputArg2);
    virtual Windows::Foundation::IAsyncOperation<ConfigSetPasscodeResult^>^ SetPasscodeAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info, _In_ Platform::String^ interfaceMemberInputArg, _In_ Windows::Foundation::Collections::IVectorView<byte>^ interfaceMemberInputArg2);

    virtual Windows::Foundation::IAsyncOperation<ConfigGetVersionResult^>^ GetVersionAsync(_In_ Windows::Devices::AllJoyn::AllJoynMessageInfo^ info);


private:
    event Windows::Foundation::EventHandler<Platform::Object^>^ _FactoryResetCalled;
    event Windows::Foundation::EventHandler<Platform::Object^>^ _RestartCalled;
    event Windows::Foundation::EventHandler<Platform::Object^>^ _GetConfigurationsCalled;
    event Windows::Foundation::EventHandler<Platform::Object^>^ _UpdateConfigurationsCalled;
    event Windows::Foundation::EventHandler<Platform::Object^>^ _ResetConfigurationsCalled;
    event Windows::Foundation::EventHandler<Platform::Object^>^ _SetPasscodeCalled;
    event Windows::Foundation::EventHandler<Platform::Object^>^ _GetVersionRequested;
};

} } } 
